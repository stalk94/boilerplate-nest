import { Controller, Post, UploadedFile, UploadedFiles, UseInterceptors } from '@nestjs/common';
import { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';
import { diskStorage } from 'multer';
import { extname } from 'path';


@Controller('upload')
export class UploadController {
    // üìå –ó–∞–≥—Ä—É–∑–∫–∞ –û–î–ù–û–ì–û —Ñ–∞–π–ª–∞
    @Post('one')
    @UseInterceptors(FileInterceptor('file', {
        storage: diskStorage({
            destination: './uploads', // –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
            filename: (req, file, cb)=> {
                const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1e9);
                cb(null, uniqueSuffix + extname(file.originalname)); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            },
        }),
    }))
    uploadSingle(@UploadedFile() file) {
        return { message: '–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω', file };
    }

    // üìå –ó–∞–≥—Ä—É–∑–∫–∞ –ù–ï–°–ö–û–õ–¨–ö–ò–• —Ñ–∞–π–ª–æ–≤
    @Post('multiple')
    @UseInterceptors(FilesInterceptor('files', 10, { // –ú–∞–∫—Å–∏–º—É–º 10 —Ñ–∞–π–ª–æ–≤
        storage: diskStorage({
            destination: './uploads',
            filename: (req, file, cb)=> {
                const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1e9);
                cb(null, uniqueSuffix + extname(file.originalname));
            },
        }),
    }))
    uploadMultiple(@UploadedFiles() files: []) {
        return { message: `–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`, files };
    }
}